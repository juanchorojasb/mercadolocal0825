import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Progress } from '@/components/ui/progress'
import { Badge } from '@/components/ui/badge'
import { CheckCircle, Circle, Lock, ArrowRight } from 'lucide-react'
import Link from 'next/link'

interface LearningStep {
  id: string
  title: string
  description: string
  type: 'course' | 'skill' | 'project'
  status: 'completed' | 'current' | 'locked'
  progress?: number
  href?: string
}

interface LearningPathProps {
  title: string
  description: string
  steps: LearningStep[]
  overallProgress: number
}

export function LearningPath({ title, description, steps, overallProgress }: LearningPathProps) {
  const getStatusIcon = (status: LearningStep['status']) => {
    switch (status) {
      case 'completed':
        return <CheckCircle className="w-5 h-5 text-green-500" />
      case 'current':
        return <Circle className="w-5 h-5 text-blue-500" />
      case 'locked':
        return <Lock className="w-5 h-5 text-gray-400" />
    }
  }

  const getStatusColor = (status: LearningStep['status']) => {
    switch (status) {
      case 'completed':
        return 'bg-green-50 border-green-200'
      case 'current':
        return 'bg-blue-50 border-blue-200'
      case 'locked':
        return 'bg-gray-50 border-gray-200'
    }
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle>{title}</CardTitle>
        <div className="space-y-2">
          <p className="text-sm text-gray-600">{description}</p>
          <div className="space-y-1">
            <div className="flex justify-between text-sm">
              <span>Progreso</span>
              <span>{overallProgress}%</span>
            </div>
            <Progress value={overallProgress} className="h-2" />
          </div>
        </div>
      </CardHeader>
      <CardContent>
        <div className="space-y-3">
          {steps.map((step, index) => (
            <div key={step.id} className="relative">
              {index < steps.length - 1 && (
                <div className="absolute left-2.5 top-8 w-0.5 h-6 bg-gray-200" />
              )}
              
              <div className={`flex items-start gap-3 p-3 rounded-lg border ${getStatusColor(step.status)}`}>
                {getStatusIcon(step.status)}
                <div className="flex-1 min-w-0">
                  <div className="flex items-center justify-between">
                    <h4 className="text-sm font-medium">{step.title}</h4>
                    <Badge variant="outline" className="text-xs">
                      {step.type}
                    </Badge>
                  </div>
                  <p className="text-xs text-gray-600 mt-1">{step.description}</p>
                  
                  {step.progress !== undefined && step.status === 'current' && (
                    <div className="mt-2">
                      <Progress value={step.progress} className="h-1" />
                      <p className="text-xs text-gray-500 mt-1">{step.progress}% completado</p>
                    </div>
                  )}
                  
                  {step.href && step.status !== 'locked' && (
                    <Link href={step.href}>
                      <div className="flex items-center gap-1 text-xs text-blue-600 hover:text-blue-700 mt-2">
                        <span>Continuar</span>
                        <ArrowRight className="w-3 h-3" />
                      </div>
                    </Link>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  )
}
